import{e as n}from"./app.23a69cc4.js";import{_ as s}from"./plugin-vue_export-helper.5a098b48.js";const a={},e=n('<h1 id="eramaker-的-erb-文件格式" tabindex="-1"><a class="header-anchor" href="#eramaker-的-erb-文件格式" aria-hidden="true">#</a> Eramaker 的 ERB 文件格式</h1><blockquote><p>翻译自原文档：http://cbaku.com/b/erakanon/eramaerb.html</p></blockquote><h2 id="基本信息" tabindex="-1"><a class="header-anchor" href="#基本信息" aria-hidden="true">#</a> 基本信息</h2><h3 id="关于-erb-文件" tabindex="-1"><a class="header-anchor" href="#关于-erb-文件" aria-hidden="true">#</a> 关于 ERB 文件</h3><p><code>ERB文件</code>，即文件名满足<code>*.erb</code>格式的文件。其中，<code>ERB</code>是 <u>Er</u>a <u>B</u>asic 的缩写，即 Era 脚本。</p><p>在<code>eramaker.exe</code>旁新建一个名为<code>ERB</code>的文件夹，并将<code>ERB文件</code>放入该文件夹中。</p><p>可用记事本等文本/代码编辑器进行编辑。</p><h3 id="如何编写erb文件" tabindex="-1"><a class="header-anchor" href="#如何编写erb文件" aria-hidden="true">#</a> 如何编写ERB文件</h3><h4 id="注释和空格" tabindex="-1"><a class="header-anchor" href="#注释和空格" aria-hidden="true">#</a> 注释和空格</h4><p>对于所有 ERB 文件：</p><ul><li>如果每行的第一个非空字符是半角分号<code>;</code>，则该行为注释，在程序执行时，该行会被忽略。</li><li>空白行也会被程序忽略。</li><li>不支持行尾注释。</li></ul><div class="custom-container tip"><p class="custom-container-title">正确</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">;</span>资金设置\nMONEY <span class="token operator">=</span> <span class="token number">500</span>\n    <span class="token punctuation">;</span>时间设置\n    DAY <span class="token operator">=</span> <span class="token number">10</span>\n    TIME <span class="token operator">=</span> <span class="token number">1</span>\n<span class="token punctuation">;</span>开始游戏\nPRINT 做什么？\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></div><div class="custom-container warning"><p class="custom-container-title">错误</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>MONEY <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">;</span>\nTIME <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>（从第5天开始）\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><h4 id="半角输入" tabindex="-1"><a class="header-anchor" href="#半角输入" aria-hidden="true">#</a> 半角输入</h4><p>输入数字、指令、变量名、函数名等时，请使用半角字符。</p><div class="custom-container tip"><p class="custom-container-title">正确</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>MONEY <span class="token operator">=</span> <span class="token number">500</span>\nPRINT 开始游戏。\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><div class="custom-container warning"><p class="custom-container-title">错误</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ＭＯＮＥＹ　＝　５００\nＰＲＩＮＴ 开始游戏。\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><h4 id="字符串输入" tabindex="-1"><a class="header-anchor" href="#字符串输入" aria-hidden="true">#</a> 字符串输入</h4><p>如果你用<code>&quot;&quot;</code>包住字符串，它将无法正常工作。</p><div class="custom-container tip"><p class="custom-container-title">正确</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>PRINT 这一天结束了……\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div><div class="custom-container warning"><p class="custom-container-title">错误</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>PRINT <span class="token string">&quot;这一天结束了……&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div><h4 id="一行的完结" tabindex="-1"><a class="header-anchor" href="#一行的完结" aria-hidden="true">#</a> 一行的完结</h4><p>即使在写长指令时，也不要把指令分成两行以上。</p><div class="custom-container tip"><p class="custom-container-title">正确</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>PRINT Lorem ipsum dolor sit amet, consectetur adipiscing elit, <span class="token function">sed</span> <span class="token keyword">do</span> eiusmod tempor incididunt ut labore et dolore magna aliqua. \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div><div class="custom-container warning"><p class="custom-container-title">错误</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>PRINT Lorem ipsum dolor sit amet,\nconsectetur adipiscing elit,\n<span class="token function">sed</span> <span class="token keyword">do</span> eiusmod tempor incididunt ut labore et dolore magna aliqua.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div><h2 id="变量与命令" tabindex="-1"><a class="header-anchor" href="#变量与命令" aria-hidden="true">#</a> 变量与命令</h2><h3 id="关于变量" tabindex="-1"><a class="header-anchor" href="#关于变量" aria-hidden="true">#</a> 关于变量</h3><p>在游戏设计中，对数据的操作至关重要。 因此，你必须学会使用<code>变量</code>，它可以存储数据，并用于进行加法和乘法等计算。</p><h3 id="变量的赋值" tabindex="-1"><a class="header-anchor" href="#变量的赋值" aria-hidden="true">#</a> 变量的赋值</h3><h4 id="直接赋值" tabindex="-1"><a class="header-anchor" href="#直接赋值" aria-hidden="true">#</a> 直接赋值</h4><p>变量的赋值需要使用运算符半角等号<code>=</code>。</p><p>在<code>=</code>符号的前后用空格或<s>制表符</s>隔开。【译者：请使用空格】</p><p>EraMaker中可以使用的数字基本都是整数。 不要输入小数。</p><div class="custom-container tip"><p class="custom-container-title">正确</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>MONEY <span class="token operator">=</span> <span class="token number">500</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div><div class="custom-container warning"><p class="custom-container-title">错误</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>MONEY ＝ <span class="token number">500</span>\n<span class="token assign-left variable">MONEY</span><span class="token operator">=</span><span class="token number">500</span>\nMONEY <span class="token operator">=</span> <span class="token number">3.14</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div><h4 id="计算结果赋值" tabindex="-1"><a class="header-anchor" href="#计算结果赋值" aria-hidden="true">#</a> 计算结果赋值</h4><p><code>*</code>是乘法，<code>/</code>是除法，<code>%</code>是求余。</p><p>当计算结果是小数时，会被四舍五入。</p><div class="custom-container tip"><p class="custom-container-title">正确</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">;</span>MONEY的值为74\nMONEY <span class="token operator">=</span> <span class="token number">15</span>+34+25\n<span class="token punctuation">;</span>MONEY的值为650\nMONEY <span class="token operator">=</span> <span class="token number">150</span>+<span class="token punctuation">(</span><span class="token number">100</span>-50<span class="token punctuation">)</span>*10\n<span class="token punctuation">;</span>MONEY的值为3\nMONEY <span class="token operator">=</span> <span class="token number">10</span>/3\n<span class="token punctuation">;</span>MONEY的值为TIME的10倍\nMONEY <span class="token operator">=</span> TIME*10\n<span class="token punctuation">;</span>若DAY为0,1,2……则MONEY为0,10,20……超过7时，返回到0。\nMONEY <span class="token operator">=</span> DAY%7*10\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></div><div class="custom-container warning"><p class="custom-container-title">错误</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>MONEY <span class="token operator">=</span> <span class="token number">500</span>×10÷4\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div><p>使用<code>+=</code>，<code>-=</code>，<code>*=</code>，<code>/=</code>和<code>%=</code>。</p><div class="custom-container tip"><p class="custom-container-title">示例</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>MONEY <span class="token operator">=</span> <span class="token number">100</span>\nTIME <span class="token operator">=</span> <span class="token number">12</span>\n<span class="token punctuation">;</span>MONEY的值为150\nMONEY <span class="token operator">+=</span> <span class="token number">50</span>\n<span class="token punctuation">;</span>MONEY的值为750\nMONEY *<span class="token operator">=</span> <span class="token number">7</span>-2\n<span class="token punctuation">;</span>MONEY的值为80\nMONEY -<span class="token operator">=</span> <span class="token number">670</span>\n<span class="token punctuation">;</span>MONEY的值为8\nMONEY %<span class="token operator">=</span> TIME\n<span class="token punctuation">;</span>MONEY的值为1\nMONEY /<span class="token operator">=</span> TIME-4\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></div><h3 id="关于数组" tabindex="-1"><a class="header-anchor" href="#关于数组" aria-hidden="true">#</a> 关于数组</h3><p>变量也可以是一个<code>数组</code>。<code>数组</code>是一种可以用来管理两个或两个以上同名变量的数据。</p><p>对数组的访问请使用半角冒号<code>:</code>。前后不要留空格。</p><p>结构如下：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&lt;数组名&gt;:&lt;索引&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>索引可以是整数，最小为0，最大值由数组本身最大值决定。</li><li>索引可以是变量，但该变量的值只能为整数，而不能是一个数组。</li></ul><div class="custom-container tip"><p class="custom-container-title">正确</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>A <span class="token operator">=</span> <span class="token number">35</span>\n<span class="token punctuation">;</span>为数组FLAG赋值\nFLAG:0 <span class="token operator">=</span> <span class="token number">0</span>\nFLAG:2 <span class="token operator">=</span> <span class="token number">10</span>\nFLAG:35 <span class="token operator">=</span> <span class="token number">440</span>\n<span class="token punctuation">;</span>用数组FLAG进行计算\nFLAG:A <span class="token operator">+=</span> <span class="token number">100</span>/FLAG:2\nFLAG:2 *<span class="token operator">=</span> FLAG:A\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></div><div class="custom-container warning"><p class="custom-container-title">错误</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>FLAG：0 <span class="token operator">=</span> <span class="token number">10</span>\nFLAG <span class="token builtin class-name">:</span> <span class="token number">52</span> <span class="token operator">=</span> <span class="token number">1000</span>\nFLAG:FLAG:20 <span class="token operator">=</span> <span class="token number">10000</span>\nFLAG:91881816 <span class="token operator">=</span> <span class="token number">1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></div><h3 id="关于二维数组" tabindex="-1"><a class="header-anchor" href="#关于二维数组" aria-hidden="true">#</a> 关于二维数组</h3><p>二维数组也是变量的一种，比较特殊。可以使用两个冒号来访问。</p><p>结构为：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&lt;数组名&gt;:&lt;角色编号&gt;:&lt;索引&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>示例：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>A <span class="token operator">=</span> <span class="token number">2</span> <span class="token punctuation">;</span>让第5个角色的第0种能力升到3级。\nABL:5:0 <span class="token operator">=</span> <span class="token number">3</span>\n<span class="token punctuation">;</span>让第A个<span class="token punctuation">(</span>第2个<span class="token punctuation">)</span>角色的第1种经验+2。\nEXP:A:1 <span class="token operator">+=</span> <span class="token number">2</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>:::</p><h3 id="打印变量至屏幕" tabindex="-1"><a class="header-anchor" href="#打印变量至屏幕" aria-hidden="true">#</a> 打印变量至屏幕</h3><p>最简单的方法是使用<code>PRINTV</code>和<code>PRINTVL</code>命令。 后面会详细讨论。</p><p>如：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>A = 2\nPRINTV A\nA = 30\nPRINTVL A\nB = 400\nPRINTVL B\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>输出：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>230\n400\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="关于字符串变量" tabindex="-1"><a class="header-anchor" href="#关于字符串变量" aria-hidden="true">#</a> 关于字符串变量</h3><p>普通变量只能处理整数，但也有字符串变量可以处理字符串。 但功能有限。</p><p>在屏幕上显示字符串变量时，使用<code>PRINTS</code>或<code>PRINTSL</code>命令。</p><div class="custom-container tip"><p class="custom-container-title">正确</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>STR:0 <span class="token operator">=</span> 测试文字\nPRINTSL STR:0\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><div class="custom-container warning"><p class="custom-container-title">错误</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">;</span>无法对字符串变量使用<span class="token operator">+=</span>\nSTR:0 <span class="token operator">+=</span> 测试文字\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><h4 id="变量列表" tabindex="-1"><a class="header-anchor" href="#变量列表" aria-hidden="true">#</a> 变量列表</h4><p>参考<a href="">此处</a>。</p><h3 id="关于命令-基本" tabindex="-1"><a class="header-anchor" href="#关于命令-基本" aria-hidden="true">#</a> 关于命令（基本）</h3><p>命令可用于在屏幕上显示文本、进行条件判断等。</p><h3 id="如何编写命令" tabindex="-1"><a class="header-anchor" href="#如何编写命令" aria-hidden="true">#</a> 如何编写命令</h3><p>基本的使用方式为：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&lt;命令名&gt; &lt;命令内容&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>命令名与命令内容之间请用半角空格或制表符分开。【译者注：请用半角空格】</p><p>对于不需要命令内容的命令，可直接换行。</p><div class="custom-container tip"><p class="custom-container-title">正确</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>PRINT 这是一个测试。\nSIF <span class="token number">3</span> <span class="token operator">==</span> <span class="token number">1</span>+2\n    PRINT 这很明显。\nWAIT\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></div><div class="custom-container warning"><p class="custom-container-title">错误</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>PRINT这是一个测试。\n<span class="token punctuation">;</span>等待输入\nWAIT <span class="token number">0</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div><h3 id="显示文字" tabindex="-1"><a class="header-anchor" href="#显示文字" aria-hidden="true">#</a> 显示文字</h3><ul><li><code>Print</code>：显示文字；</li><li><code>PrintL</code>：显示文字，并换行；</li><li><code>PrintW</code>：显示文字，并等待输入；</li><li><code>PrintV</code>：显示变量的值；</li><li><code>PrintVL</code>：显示变量的值，并换行；</li><li><code>PrintVW</code>：显示变量的值，并等待输入；</li><li><code>PrintS</code>：显示数列的值；</li><li><code>PrintSL</code>：显示数列的值，并换行；</li><li><code>PrintSW</code>：显示数列的值，并等待输入；</li><li><code>PrintForm</code>：显示文字、变量、数列组合后的文本；</li><li><code>PrintFormL</code>：显示文字、变量、数列组合后的文本，并换行；</li><li><code>PrintFormW</code>：显示文字、变量、数列组合后的文本，并等待输入；</li><li><code>PrintFormS</code>：显示文字、变量、数列组合后的数列的文本；</li><li><code>PrintFormSL</code>：显示文字、变量、数列组合后的数列的文本，并换行；</li><li><code>PrintFormSW</code>：显示文字、变量、数列组合后的数列的文本，并等待输入；</li></ul><p>示例：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>MONEY = 500\nNAME:0 = 佐藤\n\n;Print系\nPRINT 存款有\nPRINTV MONEY\nPRINTL 元。\n\n;PrintS系\nPRINT 我的名字叫\nPRINTS NAME:0\nPRINTL 。\n\n;PrintForm系\nPRINTFORML 重复一遍，我的名字叫%NAME:0%，我的存款有{MONEY}元。\nPRINTFORMW 如果存款加上1000日元，后支付600日元，剩下的就是{MONEY+1000-600}元。\nSTR:0 = 将这些钱乘以5，就得到{(MONEY+1000-600)*5}元。\nPRINTFORMSW STR:0\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>输出：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>存款有500元。\n我的名字叫佐藤。\n重复一遍，我的名字叫佐藤，我的存款有500元。\n如果得到1000日元，支付600元，剩下的就是900元。\n将这些钱乘以5，就得到4500元。\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="条件判断" tabindex="-1"><a class="header-anchor" href="#条件判断" aria-hidden="true">#</a> 条件判断</h3><h4 id="sif" tabindex="-1"><a class="header-anchor" href="#sif" aria-hidden="true">#</a> SIF</h4><p>SIF，即Single if。其表达式的真假与否，只控制 SIF 语句的下一行是否执行。</p><p>用法为：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>SIF &lt;expression&gt;\n  &lt;statement&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>示例：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>A = 1\nB = 2\nC = 4\n\nSIF A == 1\n    PRINTL 测试1\nSIF B != 1\n    PRINTL 测试2\nSIF C &lt; 5\n    PRINTL 测试3\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>输出：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>测试1\n测试2\n测试3\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="if" tabindex="-1"><a class="header-anchor" href="#if" aria-hidden="true">#</a> IF</h4><p>IF 表达式的真假与否，控制一个代码块的执行与否。</p><p>结构为：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>;IF-ENDIF模式\nIF &lt;expression&gt;\n  &lt;statement&gt;\n  ...\n  &lt;statement&gt;\nENDIF\n\n;IF-ELSEIF-ENDIF模式\nIF &lt;expression&gt;\n  &lt;statement&gt;\n  ...\n  &lt;statement&gt;\nELSEIF &lt;expression&gt;\n  &lt;statement&gt;\n  ...\n  &lt;statement&gt;\nENDIF\n\n;IF-ELSE-ENDIF模式\nIF &lt;expression&gt;\n  &lt;statement&gt;\n  ...\n  &lt;statement&gt;\nELSE\n  &lt;statement&gt;\n  ...\n  &lt;statement&gt;\nENDIF\n\n;IF-ELSEIF-ELSE-ENDIF模式\nIF &lt;expression&gt;\n  &lt;statement&gt;\n  ...\n  &lt;statement&gt;\nELSEIF &lt;expression&gt;\n  &lt;statement&gt;\n  ...\n  &lt;statement&gt;\nELSE\n  &lt;statement&gt;\n  ...\n  &lt;statement&gt;\nENDIF\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><ul><li>在 SIF 或 IF 语句中，条件表达式若为<code>0</code>，则为<code>False</code>，若不为<code>0</code>，则为<code>True</code>。</li></ul><p>示例：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>A = 1\nB = 2\nC = 4\n\nSIF A == 1\n    PRINTL 测试1\nSIF B != 1\n    PRINTL 测试2\nSIF C &lt; 5\n    PRINTL 测试3\nIF A+B &gt; 2\n    IF C &gt;= 6\n        PRINTL 测试4\n    ELSE\n        PRINTL 测试5\n    ENDIF\n    IF A == 1 &amp;&amp; B == 3\n        PRINTL 测试6\n    ELSEIF A == 1 || B == 3\n        PRINTL 测试7\n    ELSEIF A &gt; 1 || (B &gt; 2 &amp;&amp; C &gt; 2)\n        PRINTL 测试8\n    ENDIF\nELSEIF A+B == 2\n    PRINTL 测试9\nELSE\n    PRINTL 测试10\nENDIF\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p>输出：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>测试1\n测试2\n测试3\n测试5\n测试7\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="布尔运算符" tabindex="-1"><a class="header-anchor" href="#布尔运算符" aria-hidden="true">#</a> 布尔运算符</h4><table><thead><tr><th style="text-align:center;">字符</th><th style="text-align:center;">意义</th></tr></thead><tbody><tr><td style="text-align:center;">==</td><td style="text-align:center;">等于</td></tr><tr><td style="text-align:center;">!=</td><td style="text-align:center;">不等于</td></tr><tr><td style="text-align:center;">&gt;</td><td style="text-align:center;">大于</td></tr><tr><td style="text-align:center;">&gt;=</td><td style="text-align:center;">不小于</td></tr><tr><td style="text-align:center;">&lt;</td><td style="text-align:center;">小于</td></tr><tr><td style="text-align:center;">&lt;=</td><td style="text-align:center;">不大于</td></tr><tr><td style="text-align:center;">&amp;&amp;</td><td style="text-align:center;">与（AND）</td></tr><tr><td style="text-align:center;">||</td><td style="text-align:center;">或（OR）</td></tr></tbody></table><p>可以利用括号来判断更复杂的条件。</p><h3 id="输入与输入等待" tabindex="-1"><a class="header-anchor" href="#输入与输入等待" aria-hidden="true">#</a> 输入与输入等待</h3><p><code>WAIT</code>是通过显示句子等待输入时使用的。</p><p>（注：一般情况下，你可以用<code>PRINTW</code>来表达单行出现的文字，这样更容易阅读。）</p><p>当你想让玩家输入一个整数时，使用<code>INPUT</code>。 输入的结果存储在<code>RESULT</code>中。</p><p>当你想让玩家输入一个字符串时，使用<code>INPUTS</code>。 输入的结果存储在<code>RESULTS</code>中。</p><p>示例：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>PRINT DATA输入开始。\nWAIT\nPRINTL 请输入你的年龄。\nINPUT\nPRINTL 请输入你的名字。\nINPUTS\nPRINTFORML %RESULTS%今年已经{RESULT}岁了。\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="重复与goto" tabindex="-1"><a class="header-anchor" href="#重复与goto" aria-hidden="true">#</a> 重复与GOTO</h3><p>当你想重复触发指令时，可使用<code>REPEAT</code>，语句会执行到<code>REND</code>处后返回到初始点。重复次数储存在<code>COUNT</code>变量中。</p><p>注意：<code>REPEAT</code>语句不支持嵌套。</p><p>如果你在从<code>REPEAT</code>到<code>REND</code>的途中使用<code>CONTINUE</code>，它将回到<code>REPEAT</code>的位置；如果你使用<code>BREAK</code>，它将停止重复并跳到<code>REND</code>的下一行。</p><p>如果你想一次性移动到另一个地方，请使用<code>GOTO</code>。当你使用<code>GOTO</code>时，你需要用$注册一个 &quot;标签&quot;。</p><p>示例：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>REPEAT 10\n    PRINT 你好\nREND\n;使用不带参数的PRINTL用于换行。\nPRINTL\nREPEAT 5\n    PRINTFORML 分数：{COUNT*5}\nREND\n\nMONEY = 300\nREPEAT 5\n    SIF MONEY &lt;= COUNT*100\n        BREAK\n    PRINTFORML 金额比{COUNT*100}元更多。\nREND\nREPEAT 5\n    SIF MONEY == COUNT*100\n        CONTINUE\n    PRINTFORML 金额不是{COUNT*100}元。\nREND\n\n$INPUT_LOOP\nPRINTL 请输入0-9的整数。\nINPUT\nSIF RESULT &lt; 0 || RESULT &gt; 9\n   GOTO INPUT_LOOP\nPRINTFORML 输入的数字为{RESULT}。\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p>输出：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>你好你好你好你好你好你好你好你好你好你好\n分数：0\n分数：5\n分数：10\n分数：15\n分数：20\n金额比0元更多。\n金额比100元更多。\n金额比200元更多。\n金额不是0元。\n金额不是100元。\n金额不是200元。\n金额不是400元。\n请输入0-9的整数。\n-1 【故意手动输入过小的整数。】\n请输入0-9的整数。\n10 【故意手动输入过大的整数。】\n请输入0-9的整数。\n3 【按要求手动输入。】\n输入的数字为3。\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="关于函数" tabindex="-1"><a class="header-anchor" href="#关于函数" aria-hidden="true">#</a> 关于函数</h3><p>一个大型的程序，如果执意要连续不断一气呵成写到最后，而不分为各个部分的话，写出来的程序是很糟糕的。维护难度很大。如果把程序合理的分为不同的部分，可以使程序更加容易被理解。</p><p>我们可以通过“函数”来实现代码的分割。</p><p>函数本身分为“注册”和“调用”两个部分，注册时需要使用<code>@</code>，<code>@</code>之后紧跟函数的名称。合法的函数名称是由字母与下划线构成的，且均为半角。</p><p>游戏启动时最先调用的函数名为<code>EVENTFIRST</code>，我们将在后文进行详细介绍。</p><p>若想<strong>跳转</strong>到某个函数（不返回），请使用<code>JUMP</code>。</p><p>若想<strong>调用</strong>某个函数（执行完后返回），请使用<code>CALL</code>。</p><p>使用<code>CALL</code>语句调用的函数在执行到<code>RETURN</code>语句后可以返回原函数，<code>RETURN</code>语句的参数会被保存在<code>RESULT</code>变量中。若函数执行结束而没有执行<code>RETURN</code>时，<code>RESULT</code>变量中的值为<code>0</code>。</p><p>若使用<code>RESTART</code>语句，当前函数将会从头重新开始执行。</p><p>示例：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>@EVENTFIRST\nPRINTW 游戏开始。\n\nCALL OPENING\nPRINTFORMW 开局函数执行的结果为{RESULT}。\nCALL GAME_MAIN\nPRINTFORMW 游戏的结果为{RESULT}。\nJUMP ENDING\n\nPRINTL 由于上面跳转到ENDING函数，所以本行不执行。\n\n@OPENING\nPRINTW 这是开局函数。\nRETURN 25\n\n@GAME_MAIN\nPRINTW 这是游戏主函数。\nPRINTL 函数内语句运行完毕且不显式执行RETURN语句。\n\n@ENDING\nPRINTW 游戏结束。\nRESTART\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>输出：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>游戏开始。\n这是开局函数。\n开局函数执行的结果为25。\n这是游戏主函数。\n函数内语句运行完毕且不显式执行RETURN语句。\n游戏的结果为0。\n游戏结束。\n游戏结束。\n游戏结束。\n…… 【无限循环】\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="其他基本命令" tabindex="-1"><a class="header-anchor" href="#其他基本命令" aria-hidden="true">#</a> 其他基本命令</h3><p><code>QUIT</code>：退出游戏；</p><p><code>DRAWLINE</code>：用<code>--</code>画一条从左至右的分割线；</p><p><code>TIMES</code>：支持小数的乘法运算（否则EraMaker会对小数自动取整）。</p><p><code>BAR</code>：在屏幕上绘制一个类似于<code>[*****.....]</code>的控件，用法为：<code>BAR [变量] [最大值] [控件长度]</code>。</p><p>示例：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>MONEY = 500\nDRAWLINE\nBARL MONEY , 1000 , 20\nPRINTFORMW 我有{MONEY}元钱。\nDRAWLINE\nTIMES MONEY , 1.25\nBARL MONEY , 1000 , 20\nPRINTFORMW 我有{MONEY}元钱，游戏结束。\nQUIT\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>输出：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>------------------------------\n[**********..........]\n我有500元钱。\n------------------------------\n[************........]\n我有625元钱，游戏结束。\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="关于命令-训练" tabindex="-1"><a class="header-anchor" href="#关于命令-训练" aria-hidden="true">#</a> 关于命令（<s>训练</s>）</h3><p>EraMaker有一些<s>训练</s>专用的特殊命令。</p><h4 id="显示训练专用的数据" tabindex="-1"><a class="header-anchor" href="#显示训练专用的数据" aria-hidden="true">#</a> 显示训练专用的数据</h4><p><code>PRINT_ABL</code>：显示角色的能力；</p><p><code>PRINT_TALENT</code>：显示角色的素质；</p><p><code>PRINT_MARK</code>：显示角色的刻印；</p><p><code>PRINT_EXP</code>：显示角色的经验；</p><p><code>PRINT_PALAM</code>：显示角色训练中的参数；</p><p>使用以上的命令时，请指定需要显示的角色，如<code>PRINT_ABL 0</code>一般标识显示主角的能力。</p><p><code>PRINT_ITEM</code>：显示持有的物品；</p><p><code>PRINT_SHOPITEM</code>：显示商店中的物品；</p><p><code>UPCHECK</code>：显示训练命令在训练期间参数的变化。</p><h3 id="角色管理" tabindex="-1"><a class="header-anchor" href="#角色管理" aria-hidden="true">#</a> 角色管理</h3><p><code>ADDCHARA</code>：新增一个角色。如果需要添加一个编号为3的角色，<code>ADDCHARA 3</code>。</p><p><code>ADDSPCHARA</code>：新增一个SP角色。如果需要添加一个编号为3的角色，<code>ADDSPCHARA 3</code>。（SP角色是指角色编号为0或1的角色。）</p><p><code>DELCHARA</code>：删除一个由<code>ADDCHARA</code>或其他方法添加的角色。</p><p>示例：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>;编号为0的角色为名为小明的主人公\n;编号为3的角色名字是小红、5的角色名字是小刚、6的角色名字是小垃圾\nPRINTFORML 当前共有{CHARANUM}名角色。\nADDCHARA 3\nADDCHARA 5\nADDCHARA 6\nPRINTFORML 当前共有{CHARANUM}名角色。\nREPEAT CHARANUM\n    PRINTFORML 第{COUNT}号为%NAME:COUNT%。\nREND\nDELCHARA 2\nPRINTFORML 当前共有{CHARANUM}名角色。\nREPEAT CHARANUM\n    PRINTFORML 第{COUNT}号为%NAME:COUNT%。\nREND\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>输出：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>当前共有1名角色。\n当前共有4名角色。\n第0号为小明。\n第1号为小红。\n第2号为小刚。\n第3号为小垃圾。\n当前共有3名角色。\n第0号为小明。\n第1号为小红。\n第2号为小垃圾。\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="存档相关" tabindex="-1"><a class="header-anchor" href="#存档相关" aria-hidden="true">#</a> 存档相关</h3><p><code>SAVEGAME</code>：呼出保存存档界面；</p><p><code>LOADGAME</code>：呼出加载存档界面；</p><p>上面两条命令都只能在<code>SHOP</code>中调用。</p><p><code>PUTFORM</code>只能与一个名为<code>@SAVEINFO</code>的特殊函数一起使用，它可以用与PRINTFORM类似的格式来写出你的存档的概况。如该存档已经过去了多少天，角色的能力是什么，以及正在训练哪个角色等。</p><h3 id="关于begin" tabindex="-1"><a class="header-anchor" href="#关于begin" aria-hidden="true">#</a> 关于BEGIN</h3><p><code>BEGIN</code>可以通过调用各种系统指令来推进游戏。</p><p>正在执行的函数在调用<code>BEGIN</code>函数后会被终止，即使<code>BEGIN</code>函数从其他地方被<code>CALL</code>语句调用，它也不会返回到原来的函数。</p><p><code>BEGIN TRAIN</code>：开始训练；</p><p><code>BEGIN AFTERTRAIN</code>：结束训练；</p><p><code>BEGIN ABLUP</code>：呼出升级界面；</p><p><code>BEGIN TURNEND</code>：结束回合；</p><p><code>BEGIN SHOP</code>：呼出SHOP界面；</p>',177);var l=s(a,[["render",function(n,s){return e}]]);export{l as default};
