import{o as e,c as a,a as n}from"./app.1f302d32.js";const r='{"title":"常量与变量","description":"","frontmatter":{},"headers":[{"level":2,"title":"前言与确认","slug":"前言与确认"}],"relativePath":"guide/tutorials/Variable.md","lastUpdated":1631723953092}',s={},t=[n('<h1 id="常量与变量" tabindex="-1">常量与变量 <a class="header-anchor" href="#常量与变量" aria-hidden="true">#</a></h1><h2 id="前言与确认" tabindex="-1">前言与确认 <a class="header-anchor" href="#前言与确认" aria-hidden="true">#</a></h2><p>简单的输出文字虽然是开发游戏的必由之路，但仅仅局限于此，决不是任何优秀的开发者所追求的目标。</p><p>我们需要为游戏添加某种“变化”。而众所周知，我们向玩家发布的游戏只有静态的脚本文件，而没有办法让游戏开发者站在玩家身边，在玩家游玩的过程中实时地改变脚本，来给玩家带来变化。</p><p>那如何才能让静态的脚本本身，获得处理变化数据的能力，以呈现动态的内容给玩家呢？答案是“变量” 。</p><div class="warning custom-block"><p class="custom-block-title">教程依赖</p><p>本教程假设您已学习过<a href="./../Quick_Start.html">快速开始</a>。若您尚未学习过，我们强烈推荐您预先学习该教程。</p></div><p>先确认一下我们现有的工程文件夹结构：</p><div class="language-"><pre><code>root/\n ├─ emuera.config\n ├─ Emuera1824.exe\n ├─ CSV/\n └─ ERB/\n     └─ System.erb\n</code></pre></div><p>其中，<code>System.erb</code>的代码为：</p><div class="language-basic"><pre><code>@EVENTFIRST\n<span class="token function">Print</span> Hello World!\nQuit\n</code></pre></div><p>显而易见，我们现在的脚本，即使运行一百次，也不会发生任何变化，只会简单地输出我们已经预先写好的字符串。</p><p>我们来尝试写一些不那么“直接”的东西，请将<code>System.erb</code>中的内容改为这样：</p><div class="language-basic"><pre><code>@EVENTFIRST\nx <span class="token operator">=</span> Hello World!\n<span class="token function">Print</span> x\nQuit\n</code></pre></div><p>运行！我们得到下列输出：</p><div class="language-"><pre><code></code></pre></div>',15)];s.render=function(n,r,s,d,i,o){return e(),a("div",null,t)};export{r as __pageData,s as default};
